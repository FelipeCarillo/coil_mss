// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Course {
  id   Int    @id @default(autoincrement())
  name String

  user     User[]
  projects Project[]
}

model Criteria {
  id   Int    @id @default(autoincrement())
  name String

  project    Project @relation(fields: [project_id], references: [id])
  project_id String  @map("project_id")
}

model Patner_Institution {
  id      Int    @id @default(autoincrement())
  name    String
  email   String
  country String
  website String

  projects Project[]
}

model Type_User {
  id   Int    @id @default(autoincrement())
  name String

  users User[]
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  type_user    Type_User @relation(fields: [type_user_id], references: [id])
  type_user_id Int       @map("type_user_id")

  course    Course @relation(fields: [course_id], references: [id])
  course_id Int    @map("course_id")

  projects User_Project[]
}

model User_Project {
  id         Int      @id @default(autoincrement())
  user_id    String
  project_id String
  accepted   Boolean  @default(false)
  created_at DateTime @default(now())

  user    User    @relation(fields: [user_id], references: [id])
  project Project @relation(fields: [project_id], references: [id])
}

model Project {
  id          String   @id @default(uuid())
  title       String   @db.VarChar(100)
  description String?  @db.VarChar(500)
  languages   String   @db.VarChar(100)
  published   Boolean  @default(false)
  pubished_at DateTime
  start_date  DateTime
  end_date    DateTime
  created_at  DateTime @default(now())

  users     User_Project[]
  courses   Course[]
  criterias Criteria[]
  patners   Patner_Institution[]
}
