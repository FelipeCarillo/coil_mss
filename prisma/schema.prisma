generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String             @id 
  name           String?
  email          String          @unique
  password       String
  userTypeId     Int
  courseId       Int?
  semesterCourse Int?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  course         Course?         @relation(fields: [courseId], references: [id])
  userType       UserType        @relation(fields: [userTypeId], references: [id])
  projects       ProjectUser[]
  ProjectCourse  ProjectCourse[]
  userCourses    UserCourse[] 
}

model UserType {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Course {
  id          Int          @id @default(autoincrement())
  name        String
  users       User[]
  userCourses UserCourse[]
}

model UserCourse {
  userId   String
  courseId Int
  user     User   @relation(fields: [userId], references: [id])
  course   Course @relation(fields: [courseId], references: [id])

  @@id([userId, courseId])
}

model Project {
  id              Int              @id @default(autoincrement())
  startDate       DateTime
  endDate         DateTime
  description     String
  language        String
  published       Boolean
  users           ProjectUser[]
  projectCourses  ProjectCourse[]
  projectPartners ProjectPartner[]
  projectCriterias ProjectCriteria[]
}

model ProjectUser {
  id        Int     @id @default(autoincrement())
  projectId Int
  userId    String
  userAceppted Boolean
  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model ProjectCourse {
  projectId Int
  userId    String
  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@id([projectId, userId])
}

model PartnerInstitution {
  id              Int              @id @default(autoincrement())
  partnerName     String
  partnerEmail    String
  partnerCountry  String
  patnerWebsite   String?
  projectPartners ProjectPartner[]
}

model ProjectPartner {
  projectId            Int
  partnerInstitutionId Int
  project              Project            @relation(fields: [projectId], references: [id])
  partnerInstitution   PartnerInstitution @relation(fields: [partnerInstitutionId], references: [id])

  @@id([projectId, partnerInstitutionId])
}

model Criteria {
  id          Int    @id @default(autoincrement())
  criteriaName        String
  projectCriterias ProjectCriteria[] 
}

model ProjectCriteria {
  projectId Int
  criteriaId Int
  project   Project @relation(fields: [projectId], references: [id])
  criteria  Criteria @relation(fields: [criteriaId], references: [id])

  @@id([projectId, criteriaId])
}

